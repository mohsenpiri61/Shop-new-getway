version: "3.9"

services:

  redis:
    container_name: redis_shop
    image: redis
    restart: always
    ports:
    - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    
  
  db:
    container_name: db
    image: postgres:15-alpine
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
 
    restart: always

  backend:
    container_name: backend_shop
    build:
      context: .
      dockerfile: ./dockerfiles/dev/django/Dockerfile
    volumes: 
      - ./core:/usr/src/app
    working_dir: /usr/src/app
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - '8000:8000'
    environment:
      - DEBUG=True
    # env_file:
    #   - ./envs/dev/django/.env
    restart: always
    depends_on:
      - db
      - redis


  worker:
    build: 
      context: .
      dockerfile: ./dockerfiles/dev/django/Dockerfile
    command: celery -A core worker --loglevel=info
    volumes:
      - ./core:/app
    depends_on:
      - db
      - redis
      - backend  

      
  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      - '5000:80'
      - '25:25'
      
    volumes:
        - smtp4dev-data:/smtp4dev
    environment:
      - ServerOptions__HostName=smtp4dev



volumes:
  smtp4dev-data: